
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model IPagedList<ProjetoNoticias.Models.TbNoticias>

@{
    ViewData["Title"] = "Index";
}

<h2>Pesquisa de Notícias</h2>

<hr class="m-3" />

<div class="container">
    @if (Model.Count() == 0)
    {
        
      <div class="p-3 mb-2 bg-secondary text-white text-center">Nenhum Registro Encontrado</div>
       
    }
    else
    {
        @foreach (var item in Model)
        {
            <p class="font-weight-bold text-left m-3">Data da Publicação: @Convert.ToDateTime(item.Data).ToString("dd-MM-yyyy")</p>
            <h2 class="text-center m-4"> @Html.DisplayFor(modelItem => item.Titulo)  </h2>
            @Html.TextAreaFor(modelItem => item.Descricao, new { @class = " d-flex justify-content-center form-control text-justify m-3", @rows = "10", @readonly = "readonly" })
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Autor
                        </th>
                        <th>
                            Categoria
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Autor.Nome)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Categoria.Nome)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" asp-route-pagina="@ViewBag.Pagina">Editar</a>
                        </td>
                    </tr>
                </tbody>
            </table>
        }
    }




    <hr class="m-3" />

</div>

<div>
    <a asp-action="Index" asp-route-pagina="@ViewBag.Pagina">Voltar para Lista Principal</a>
</div>

<div class="row d-flex justify-content-center p-2">
    @Html.PagedListPager(Model, pagina => Url.Action("Busca", new { pagina }), new PagedListRenderOptions { FunctionToTransformEachPageLink = (liTag, aTag) => { aTag.Attributes.Add("class", "page-link".ToString()); return aTag; }, LiElementClasses = new[] { "page-item" }, UlElementClasses = new[] { "pagination  justify-content-center" } })

</div>

